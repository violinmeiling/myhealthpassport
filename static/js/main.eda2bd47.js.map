{"version":3,"file":"static/js/main.eda2bd47.js","mappings":"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","sources":["index.js","../node_modules/@propelauth/javascript/node_modules/js-cookie/dist/js.cookie.mjs","../node_modules/@propelauth/javascript/src/cookies.ts","../node_modules/@propelauth/javascript/src/org.ts","../node_modules/@propelauth/javascript/src/user.ts","../node_modules/@propelauth/javascript/src/api.ts","../node_modules/@propelauth/javascript/src/org_helper.ts","../node_modules/@propelauth/javascript/src/access_helper.ts","../node_modules/@propelauth/javascript/src/fetch_retries.ts","../node_modules/@propelauth/javascript/src/helpers.ts","../node_modules/@propelauth/javascript/src/client.ts","../webpack/bootstrap","../webpack/runtime/async module","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/startup"],"sourcesContent":["import { createClient } from \"@propelauth/javascript\";\n\nconst authClient = createClient({\n    // The base URL where your authentication pages are hosted. You can find this under the Frontend Integration section for your project.\n    authUrl: \"https://96933199.propelauthtest.com\",\n    // If true, periodically refresh the access token in the background. This helps ensure you always have a valid token ready to go. Default true.\n    enableBackgroundTokenRefresh: true\n});\n\nvar userid = \"\"\n\nfunction displayprofile(userid) {\n  fetch(\"http://127.0.0.1:5000/users?userid=\"+userid).then(response => response.json()).then(data => {\n      console.log(data);\n      document.getElementById(\"name\").innerText = data['name'];\n      document.getElementById(\"dob\").innerText = data['dob'];\n      document.getElementById(\"height\").innerText = data['height'];\n      document.getElementById(\"weight\").innerText = data['weight'];\n      document.getElementById(\"sex\").innerText = data['sex'];\n      document.getElementById(\"address\").innerText = data['address'];\n      document.getElementById(\"provider\").innerText = data['insurance_provider'];\n      document.getElementById(\"policy\").innerText = data['insurance_policy_number'];\n      document.getElementById(\"ssn\").innerText = data['social_security_number'];\n    })\n}\n\nfunction deletemedication() {\n  let medid = this.id;\n  fetch(\"http://127.0.0.1:5000/deletemedication?userid=\"+userid+\"&medid=\"+medid).then(response => response.json()).then(data => {\n    displaymedications();\n  })\n}\n\nfunction displaymedications() {\n  fetch(\"http://127.0.0.1:5000/users?userid=\"+userid).then(response => response.json()).then(data => {\n    console.log(data);\n    let arr = data['medications'];\n\n    // Get the list container element\n  let list =\n  document.getElementById('medlist');\n\n  // Create the unordered list element \n  //and set its inner HTML using map() and join()\n  let ul = `<ul>${arr.map(item =>\n  `<li>${item.medication_name}, ${item.dosage}, ${item.frequency}, ${item.duration}, ${item.intended_use}<button class = \"delete\" id = ${item.medication_id}>Delete</button></li>`).join('')}\n        </ul>`;\n\n  // Set the inner HTML of the list container\n  list.innerHTML = ul;\n  var elems = document.getElementsByClassName(\"delete\");\n  for (var i = 0; i < elems.length; i++) {\n   elems.item(i).addEventListener('click', deletemedication);\n  }\n})\n}\n\n\nfunction addmedication() {\n  const medname = document.getElementById('mednameinput').value;\n  const use = document.getElementById('meduseinput').value;\n  const dosage = document.getElementById('dosageinput').value;\n  const frequency = document.getElementById('frequencyinput').value;\n  const duration = document.getElementById('durationinput').value;\n  fetch(\"http://127.0.0.1:5000/addmedication?userid=\"+userid+\"&medname=\"+medname+\"&use=\"+use+\"&dosage=\"+dosage+\"&frequency=\"+frequency+\"&duration=\"+duration).then(response => response.json()).then(data => {\n    console.log(data);\n    displaymedications();\n    document.getElementById(\"mednameinput\").value = \"\";\n      document.getElementById(\"meduseinput\").value = \"\";\n      document.getElementById(\"dosageinput\").value = \"\";\n      document.getElementById(\"frequencyinput\").value = \"\";\n      document.getElementById(\"durationinput\").value = \"\";\n  })\n}\n\n\nfunction updateprofile() {\n  const name = document.getElementById('nameinput').value;\n  const dob = document.getElementById('dobinput').value;\n  const height = document.getElementById('heightinput').value;\n  const weight = document.getElementById('weightinput').value;\n  const sex = document.getElementById('sexinput').value;\n  const address = document.getElementById('addressinput').value;\n  const provider = document.getElementById('providerinput').value;\n  const policy = document.getElementById('policyinput').value;\n  const ssn = document.getElementById('ssninput').value;\n  fetch(\"http://127.0.0.1:5000/updateuser?userid=\"+userid+\"&name=\"+name+\"&dob=\"+dob+\"&height=\"+height+\"&weight=\"+weight+\"&sex=\"+sex+\"&address=\"+address+\"&provider=\"+provider+\"&policy=\"+policy+\"&ssn=\"+ssn).then(response => response.json()).then(data => {\n      console.log(height);\n      document.getElementById(\"name\").innerText = data['user']['name'];\n      document.getElementById(\"dob\").innerText = data['user']['dob'];\n      document.getElementById(\"height\").innerText = data['user']['height'];\n      document.getElementById(\"weight\").innerText = data['user']['weight'];\n      document.getElementById(\"sex\").innerText = data['user']['sex'];\n      document.getElementById(\"address\").innerText = data['user']['address'];\n      document.getElementById(\"provider\").innerText = data['user']['insurance_provider'];\n      document.getElementById(\"policy\").innerText = data['user']['insurance_policy_number'];\n      document.getElementById(\"ssn\").innerText = data['user']['social_security_number'];\n\n      document.getElementById(\"nameinput\").value = \"\";\n      document.getElementById(\"dobinput\").value = \"\";\n      document.getElementById(\"heightinput\").value = \"\";\n      document.getElementById(\"weightinput\").value = \"\";\n      document.getElementById(\"sexinput\").value = \"\";\n      document.getElementById(\"addressinput\").value = \"\";\n      document.getElementById(\"providerinput\").value = \"\";\n      document.getElementById(\"policyinput\").value = \"\";\n      document.getElementById(\"ssninput\").value = \"\";\n    })\n}\n\nconst authInfo = await authClient.getAuthenticationInfoOrNull()\nif (authInfo) {\n    userid = authInfo.user.userId;\n    console.log(\"User is logged in as\", authInfo.user.userId);\n    document.getElementById(\"display-when-logged-in\").style.display = \"revert\";\n    document.getElementById(\"display-when-logged-out\").style.display = \"none\";\n\n    displayprofile(authInfo.user.userId);\n    document.getElementById(\"updateprofile\").onclick = updateprofile;\n    document.getElementById(\"addmed\").onclick = addmedication;\n    displaymedications();\n    \n        // Get authentication info and set email to it\n        authClient.getAuthenticationInfoOrNull()\n            .then(authInfo => {\n                document.getElementById(\"userid\").innerText = authInfo?.user?.userId;\n            });\n} else {\n    console.log(\"User is not logged in\");\n    document.getElementById(\"display-when-logged-in\").style.display = \"none\";\n    document.getElementById(\"display-when-logged-out\").style.display = \"revert\";\n}\n\n// Hook up buttons to redirect to signup, login, etc\ndocument.getElementById(\"signup\").onclick = authClient.redirectToSignupPage;\ndocument.getElementById(\"login\").onclick = authClient.redirectToLoginPage;\ndocument.getElementById(\"account\").onclick = authClient.redirectToAccountPage;\ndocument.getElementById(\"logout\").onclick = authClient.logout;","/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n","export const ACTIVE_ORG_ID_COOKIE_NAME = \"active_org_id\"\n","import Cookies from \"js-cookie\"\nimport { ACTIVE_ORG_ID_COOKIE_NAME } from \"./cookies\"\n\nexport type OrgMemberInfo = {\n    orgId: string\n    orgName: string\n    orgMetadata: { [key: string]: any }\n    urlSafeOrgName: string\n    orgRoleStructure: OrgRoleStructure\n    userAssignedRole: string\n    userInheritedRolesPlusCurrentRole: string[]\n    userPermissions: string[]\n    userAssignedAdditionalRoles: string[]\n}\nexport type OrgIdToOrgMemberInfo = {\n    [orgId: string]: OrgMemberInfo\n}\n\nexport enum OrgRoleStructure {\n    SingleRole = \"single_role_in_hierarchy\",\n    MultiRole = \"multi_role\",\n}\n\nexport const setActiveOrgId = (orgId: string) => {\n    Cookies.set(ACTIVE_ORG_ID_COOKIE_NAME, orgId, {\n        sameSite: \"lax\",\n        secure: true,\n    })\n}\n\nexport const getActiveOrgId = (): string | undefined => {\n    return Cookies.get(ACTIVE_ORG_ID_COOKIE_NAME)\n}\n","import { OrgIdToOrgMemberInfo, OrgRoleStructure } from \"./org\"\n\nexport type UserProperties = { [key: string]: unknown }\n\nexport interface UserFields {\n    userId: string\n    email: string\n    createdAt: number\n    firstName?: string\n    lastName?: string\n    username?: string\n    properties?: UserProperties\n    pictureUrl?: string\n    hasPassword?: boolean\n    hasMfaEnabled?: boolean\n    canCreateOrgs?: boolean\n    legacyUserId?: string\n    impersonatorUserId?: string\n}\n\nexport class UserClass {\n    public userId: string\n    public orgIdToUserOrgInfo?: OrgIdToOrgMemberInfoClass\n\n    // Metadata about the user\n    public email: string\n    public createdAt: number\n    public firstName?: string\n    public lastName?: string\n    public username?: string\n    public properties?: UserProperties\n    public pictureUrl?: string\n    public hasPassword?: boolean\n    public hasMfaEnabled?: boolean\n    public canCreateOrgs?: boolean\n\n    // If you used our migration APIs to migrate this user from a different system,\n    // this is their original ID from that system.\n    public legacyUserId?: string\n    public impersonatorUserId?: string\n\n    constructor(userFields: UserFields, orgIdToUserOrgInfo?: OrgIdToOrgMemberInfoClass) {\n        this.userId = userFields.userId\n        this.orgIdToUserOrgInfo = orgIdToUserOrgInfo\n\n        this.email = userFields.email\n        this.firstName = userFields.firstName\n        this.lastName = userFields.lastName\n        this.username = userFields.username\n        this.createdAt = userFields.createdAt\n        this.pictureUrl = userFields.pictureUrl\n        this.hasPassword = userFields.hasPassword\n        this.hasMfaEnabled = userFields.hasMfaEnabled\n        this.canCreateOrgs = userFields.canCreateOrgs\n\n        this.legacyUserId = userFields.legacyUserId\n        this.impersonatorUserId = userFields.impersonatorUserId\n        this.properties = userFields.properties\n    }\n\n    public getOrg(orgId: string): OrgMemberInfoClass | undefined {\n        if (!this.orgIdToUserOrgInfo) {\n            return undefined\n        }\n\n        return this.orgIdToUserOrgInfo[orgId]\n    }\n\n    public getOrgByName(orgName: string): OrgMemberInfoClass | undefined {\n        if (!this.orgIdToUserOrgInfo) {\n            return undefined\n        }\n\n        const urlSafeOrgName = orgName.toLowerCase().replace(/ /g, \"-\")\n        for (const orgId in this.orgIdToUserOrgInfo) {\n            const orgMemberInfo = this.orgIdToUserOrgInfo[orgId]\n            if (orgMemberInfo?.urlSafeOrgName === urlSafeOrgName) {\n                return orgMemberInfo\n            }\n        }\n\n        return undefined\n    }\n\n    public getUserProperty(key: string): unknown | undefined {\n        if (!this.properties) {\n            return undefined\n        }\n\n        return this.properties[key]\n    }\n\n    public getOrgs(): OrgMemberInfoClass[] {\n        if (!this.orgIdToUserOrgInfo) {\n            return []\n        }\n\n        return Object.values(this.orgIdToUserOrgInfo)\n    }\n\n    public isImpersonating(): boolean {\n        return !!this.impersonatorUserId\n    }\n\n    public isRole(orgId: string, role: string): boolean {\n        const orgMemberInfo = this.getOrg(orgId)\n        if (!orgMemberInfo) {\n            return false\n        }\n\n        return orgMemberInfo.isRole(role)\n    }\n\n    public isAtLeastRole(orgId: string, role: string): boolean {\n        const orgMemberInfo = this.getOrg(orgId)\n        if (!orgMemberInfo) {\n            return false\n        }\n\n        return orgMemberInfo.isAtLeastRole(role)\n    }\n\n    public hasPermission(orgId: string, permission: string): boolean {\n        const orgMemberInfo = this.getOrg(orgId)\n        if (!orgMemberInfo) {\n            return false\n        }\n\n        return orgMemberInfo.hasPermission(permission)\n    }\n\n    public hasAllPermissions(orgId: string, permissions: string[]): boolean {\n        const orgMemberInfo = this.getOrg(orgId)\n        if (!orgMemberInfo) {\n            return false\n        }\n\n        return orgMemberInfo.hasAllPermissions(permissions)\n    }\n\n    public static fromJSON(json: string): UserClass {\n        const obj = JSON.parse(json)\n        const orgIdToUserOrgInfo: OrgIdToOrgMemberInfoClass = {}\n        for (const orgId in obj.orgIdToUserOrgInfo) {\n            orgIdToUserOrgInfo[orgId] = OrgMemberInfoClass.fromJSON(JSON.stringify(obj.orgIdToUserOrgInfo[orgId]))\n        }\n        try {\n            return new UserClass(\n                {\n                    userId: obj.userId,\n                    email: obj.email,\n                    createdAt: obj.createdAt,\n                    firstName: obj.firstName,\n                    lastName: obj.lastName,\n                    username: obj.username,\n                    legacyUserId: obj.legacyUserId,\n                    impersonatorUserId: obj.impersonatorUserId,\n                    properties: obj.properties,\n                    pictureUrl: obj.pictureUrl,\n                    hasPassword: obj.hasPassword,\n                    hasMfaEnabled: obj.hasMfaEnabled,\n                    canCreateOrgs: obj.canCreateOrgs,\n                },\n                orgIdToUserOrgInfo\n            )\n        } catch (e) {\n            console.error(\"Unable to parse User. Make sure the JSON string is a stringified `UserClass` type.\", e)\n            throw e\n        }\n    }\n}\n\nexport interface OrgIdToOrgMemberInfoClass {\n    [orgId: string]: OrgMemberInfoClass\n}\n\nexport class OrgMemberInfoClass {\n    public orgId: string\n    public orgName: string\n    public orgMetadata: { [key: string]: any }\n    public urlSafeOrgName: string\n    public orgRoleStructure: OrgRoleStructure\n\n    public userAssignedRole: string\n    public userInheritedRolesPlusCurrentRole: string[]\n    public userPermissions: string[]\n    public userAssignedAdditionalRoles: string[]\n\n    constructor(\n        orgId: string,\n        orgName: string,\n        orgMetadata: { [key: string]: any },\n        urlSafeOrgName: string,\n        userAssignedRole: string,\n        userInheritedRolesPlusCurrentRole: string[],\n        userPermissions: string[],\n        orgRoleStructure?: OrgRoleStructure,\n        userAssignedAdditionalRoles?: string[]\n    ) {\n        this.orgId = orgId\n        this.orgName = orgName\n        this.orgMetadata = orgMetadata\n        this.urlSafeOrgName = urlSafeOrgName\n        this.orgRoleStructure = orgRoleStructure ?? OrgRoleStructure.SingleRole\n\n        this.userAssignedRole = userAssignedRole\n        this.userInheritedRolesPlusCurrentRole = userInheritedRolesPlusCurrentRole\n        this.userPermissions = userPermissions\n        this.userAssignedAdditionalRoles = userAssignedAdditionalRoles ?? []\n    }\n\n    // validation methods\n    public isRole(role: string): boolean {\n        if (this.orgRoleStructure === OrgRoleStructure.MultiRole) {\n            return this.userAssignedRole === role || this.userAssignedAdditionalRoles.includes(role)\n        } else {\n            return this.userAssignedRole === role\n        }\n    }\n\n    public isAtLeastRole(role: string): boolean {\n        if (this.orgRoleStructure === OrgRoleStructure.MultiRole) {\n            return this.userAssignedRole === role || this.userAssignedAdditionalRoles.includes(role)\n        } else {\n            return this.userInheritedRolesPlusCurrentRole.includes(role)\n        }\n    }\n\n    public hasPermission(permission: string): boolean {\n        return this.userPermissions.includes(permission)\n    }\n\n    public hasAllPermissions(permissions: string[]): boolean {\n        return permissions.every((permission) => this.hasPermission(permission))\n    }\n\n    public static fromJSON(json: string): OrgMemberInfoClass {\n        const obj = JSON.parse(json)\n        try {\n            return new OrgMemberInfoClass(\n                obj.orgId,\n                obj.orgName,\n                obj.orgMetadata,\n                obj.urlSafeOrgName,\n                obj.userAssignedRole,\n                obj.userInheritedRolesPlusCurrentRole,\n                obj.userPermissions,\n                obj.orgRoleStructure,\n                obj.userAssignedAdditionalRoles\n            )\n        } catch (e) {\n            console.error(\n                \"Unable to parse UserOrgInfo. Make sure the JSON string is a stringified `UserOrgInfo` type.\",\n                e\n            )\n            throw e\n        }\n    }\n}\n\nexport function convertOrgIdToOrgMemberInfo(\n    orgIdToOrgMemberInfo: OrgIdToOrgMemberInfo | undefined\n): OrgIdToOrgMemberInfoClass | undefined {\n    if (orgIdToOrgMemberInfo === undefined) {\n        return undefined\n    }\n    const orgIdToUserOrgInfo: OrgIdToOrgMemberInfoClass = {}\n    for (const orgMemberInfo of Object.values(orgIdToOrgMemberInfo)) {\n        orgIdToUserOrgInfo[orgMemberInfo.orgId] = new OrgMemberInfoClass(\n            orgMemberInfo.orgId,\n            orgMemberInfo.orgName,\n            orgMemberInfo.orgMetadata,\n            orgMemberInfo.urlSafeOrgName,\n            orgMemberInfo.userAssignedRole,\n            orgMemberInfo.userInheritedRolesPlusCurrentRole,\n            orgMemberInfo.userPermissions,\n            orgMemberInfo.orgRoleStructure,\n            orgMemberInfo.userAssignedAdditionalRoles\n        )\n    }\n    return orgIdToUserOrgInfo\n}\n","import { AccessHelper, getAccessHelper } from \"./access_helper\"\nimport { OrgIdToOrgMemberInfo } from \"./org\"\nimport { getOrgHelper, OrgHelper } from \"./org_helper\"\nimport { convertOrgIdToOrgMemberInfo, UserClass } from \"./user\"\n\nexport type User = {\n    userId: string\n\n    email: string\n    emailConfirmed: boolean\n\n    hasPassword: boolean\n\n    username?: string\n    firstName?: string\n    lastName?: string\n    pictureUrl?: string\n\n    locked: boolean\n    enabled: boolean\n    mfaEnabled: boolean\n    canCreateOrgs: boolean\n\n    createdAt: number\n    lastActiveAt: number\n\n    legacyUserId?: string\n    properties?: { [key: string]: unknown }\n}\n\nexport type AuthenticationInfo = {\n    accessToken: string\n    expiresAtSeconds: number\n    orgHelper: OrgHelper\n    accessHelper: AccessHelper\n\n    /**\n     * You should prefer orgHelper to orgIdToOrgMemberInfo.\n     * orgHelper provides useful abstractions over this mapping\n     */\n    orgIdToOrgMemberInfo?: OrgIdToOrgMemberInfo\n    user: User\n    userClass: UserClass\n\n    // If someone on your team is impersonating another user, this will be set to the employee's ID\n    // By default, user impersonation is turned off and this will be undefined\n    impersonatorUserId?: string\n}\n\nexport type LogoutResponse = {\n    redirect_to: string\n}\n\nexport function fetchAuthenticationInfo(authUrl: string, activeOrgId?: string): Promise<AuthenticationInfo | null> {\n    const queryParams = new URLSearchParams()\n    if (activeOrgId) {\n        queryParams.append(\"active_org_id\", activeOrgId)\n    }\n    let path = `${authUrl}/api/v1/refresh_token`\n    if (queryParams.toString()) {\n        path += `?${queryParams.toString()}`\n    }\n    return fetch(path, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    }).then((res) => {\n        if (res.status === 401) {\n            return null\n        } else if (res.status === 0) {\n            logCorsError()\n            return Promise.reject({\n                status: 503,\n                message: \"Unable to process authentication response\",\n            })\n        } else if (!res.ok) {\n            return Promise.reject({\n                status: res.status,\n                message: res.statusText,\n            })\n        } else {\n            return parseResponse(res)\n        }\n    })\n}\n\nexport function logout(authUrl: string): Promise<LogoutResponse> {\n    return fetch(`${authUrl}/api/v1/logout`, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    }).then((res) => {\n        if (res.status === 0) {\n            logCorsError()\n            return Promise.reject({\n                status: 503,\n                message: \"Unable to process authentication response\",\n            })\n        } else if (!res.ok) {\n            console.error(\"Logout error\", res.status, res.statusText)\n            return Promise.reject({\n                status: res.status,\n                message: res.statusText,\n            })\n        } else {\n            return res.json()\n        }\n    })\n}\n\nfunction parseResponse(res: Response): Promise<AuthenticationInfo> {\n    return res.text().then(\n        (httpResponse) => {\n            try {\n                const authInfoWithoutUserClass = parseJsonConvertingSnakeToCamel(httpResponse)\n                return withExtraArgs(authInfoWithoutUserClass)\n            } catch (e) {\n                console.error(\"Unable to process authentication response\", e)\n                return Promise.reject({\n                    status: 500,\n                    message: \"Unable to process authentication response\",\n                })\n            }\n        },\n        (e) => {\n            console.error(\"Unable to process authentication response\", e)\n            return Promise.reject({\n                status: 500,\n                message: \"Unable to process authentication response\",\n            })\n        }\n    )\n}\n\n// The API responds with snake_case, but TypeScript convention is camelCase.\n// When parsing JSON, we pass in reviver function to convert from snake_case to camelCase.\nexport function parseJsonConvertingSnakeToCamel(str: string): AuthenticationInfo {\n    return JSON.parse(str, function (key, value) {\n        if (key === \"org_id\") {\n            this.orgId = value\n        } else if (key === \"org_name\") {\n            this.orgName = value\n        } else if (key === \"org_metadata\") {\n            this.orgMetadata = value\n        } else if (key === \"url_safe_org_name\") {\n            this.urlSafeOrgName = value\n        } else if (key === \"user_role\") {\n            this.userAssignedRole = value\n        } else if (key === \"inherited_user_roles_plus_current_role\") {\n            this.userInheritedRolesPlusCurrentRole = value\n        } else if (key === \"user_permissions\") {\n            this.userPermissions = value\n        } else if (key === \"access_token\") {\n            this.accessToken = value\n        } else if (key === \"expires_at_seconds\") {\n            this.expiresAtSeconds = value\n        } else if (key === \"org_id_to_org_member_info\") {\n            this.orgIdToOrgMemberInfo = value\n        } else if (key === \"user_id\") {\n            this.userId = value\n        } else if (key === \"email_confirmed\") {\n            this.emailConfirmed = value\n        } else if (key === \"first_name\") {\n            this.firstName = value\n        } else if (key === \"last_name\") {\n            this.lastName = value\n        } else if (key === \"picture_url\") {\n            this.pictureUrl = value\n        } else if (key === \"mfa_enabled\") {\n            this.mfaEnabled = value\n        } else if (key === \"has_password\") {\n            this.hasPassword = value\n        } else if (key === \"can_create_orgs\") {\n            this.canCreateOrgs = value\n        } else if (key === \"created_at\") {\n            this.createdAt = value\n        } else if (key === \"last_active_at\") {\n            this.lastActiveAt = value\n        } else if (key === \"legacy_user_id\") {\n            this.legacyUserId = value\n        } else if (key === \"impersonator_user\") {\n            this.impersonatorUserId = value\n        } else if (key === \"org_role_structure\") {\n            this.orgRoleStructure = value\n        } else if (key === \"additional_roles\") {\n            this.userAssignedAdditionalRoles = value\n        } else {\n            return value\n        }\n    })\n}\n\nfunction withExtraArgs(authInfoWithoutExtraArgs: AuthenticationInfo): Promise<AuthenticationInfo> {\n    if (authInfoWithoutExtraArgs.orgIdToOrgMemberInfo) {\n        authInfoWithoutExtraArgs.orgHelper = getOrgHelper(authInfoWithoutExtraArgs.orgIdToOrgMemberInfo)\n        authInfoWithoutExtraArgs.accessHelper = getAccessHelper(authInfoWithoutExtraArgs.orgIdToOrgMemberInfo)\n    }\n    authInfoWithoutExtraArgs.userClass = new UserClass(\n        {\n            userId: authInfoWithoutExtraArgs.user.userId,\n            email: authInfoWithoutExtraArgs.user.email,\n            createdAt: authInfoWithoutExtraArgs.user.createdAt,\n            firstName: authInfoWithoutExtraArgs.user.firstName,\n            lastName: authInfoWithoutExtraArgs.user.lastName,\n            username: authInfoWithoutExtraArgs.user.username,\n            properties: authInfoWithoutExtraArgs.user.properties,\n            pictureUrl: authInfoWithoutExtraArgs.user.pictureUrl,\n            hasPassword: authInfoWithoutExtraArgs.user.hasPassword,\n            hasMfaEnabled: authInfoWithoutExtraArgs.user.mfaEnabled,\n            canCreateOrgs: authInfoWithoutExtraArgs.user.canCreateOrgs,\n            legacyUserId: authInfoWithoutExtraArgs.user.legacyUserId,\n            impersonatorUserId: authInfoWithoutExtraArgs.impersonatorUserId,\n        },\n        convertOrgIdToOrgMemberInfo(authInfoWithoutExtraArgs.orgIdToOrgMemberInfo)\n    )\n    return Promise.resolve(authInfoWithoutExtraArgs)\n}\n\nfunction logCorsError() {\n    console.error(\n        \"Request to PropelAuth failed due to a CORS error. There are a few likely causes: \\n\" +\n            \" 1. In the Frontend Integration section of your dashboard, make sure your requests are coming either the specified Application URL or localhost with a matching port.\\n\" +\n            \" 2. Make sure your server is hosted on HTTPS in production.\"\n    )\n}\n","import {OrgIdToOrgMemberInfo, OrgMemberInfo} from \"./org\";\n\nexport type OrgHelper = {\n    getOrgs: () => OrgMemberInfo[]\n    getOrgIds: () => string[]\n    getOrg: (orgId: string) => OrgMemberInfo | undefined\n    getOrgByName: (orgName: string) => OrgMemberInfo | undefined\n}\n\nexport function getOrgHelper(\n    orgIdToOrgMemberInfo: OrgIdToOrgMemberInfo,\n): OrgHelper {\n    return {\n        getOrg(orgId: string): OrgMemberInfo | undefined {\n            if (orgIdToOrgMemberInfo.hasOwnProperty(orgId)) {\n                return orgIdToOrgMemberInfo[orgId]\n            } else {\n                return undefined\n            }\n        },\n        getOrgIds(): string[] {\n            return Object.keys(orgIdToOrgMemberInfo)\n        },\n        getOrgs(): OrgMemberInfo[] {\n            return Object.values(orgIdToOrgMemberInfo)\n        },\n        getOrgByName(orgName: string): OrgMemberInfo | undefined {\n            for (const orgMemberInfo of Object.values(orgIdToOrgMemberInfo)) {\n                if (orgMemberInfo.orgName === orgName || orgMemberInfo.urlSafeOrgName === orgName) {\n                    return orgMemberInfo\n                }\n            }\n            return undefined\n        },\n    }\n}","import {OrgIdToOrgMemberInfo, OrgRoleStructure} from \"./org\";\n\nexport type AccessHelper = {\n    isRole: (orgId: string, role: string) => boolean\n    isAtLeastRole: (orgId: string, role: string) => boolean\n    hasPermission: (orgId: string, permission: string) => boolean\n    hasAllPermissions: (orgId: string, permissions: string[]) => boolean\n    getAccessHelperWithOrgId: (orgId: string) => AccessHelperWithOrg\n}\n\nexport type AccessHelperWithOrg = {\n    isRole: (role: string) => boolean\n    isAtLeastRole: (role: string) => boolean\n    hasPermission: (permission: string) => boolean\n    hasAllPermissions: (permissions: string[]) => boolean\n}\n\nexport function getAccessHelper(\n    orgIdToOrgMemberInfo: OrgIdToOrgMemberInfo,\n): AccessHelper {\n    function isRole(orgId: string, role: string): boolean {\n        const orgMemberInfo = orgIdToOrgMemberInfo[orgId]\n        if (orgMemberInfo === undefined) {\n            return false;\n        }\n        if (orgMemberInfo.orgRoleStructure === OrgRoleStructure.MultiRole) {\n            return orgMemberInfo.userAssignedRole === role || orgMemberInfo.userAssignedAdditionalRoles.includes(role)\n        } else {\n            return orgMemberInfo.userAssignedRole === role\n        }\n    }\n    \n    function isAtLeastRole(orgId: string, role: string): boolean {\n        const orgMemberInfo = orgIdToOrgMemberInfo[orgId]\n        if (orgMemberInfo === undefined) {\n            return false;\n        }\n        if (orgMemberInfo.orgRoleStructure === OrgRoleStructure.MultiRole) {\n            return orgMemberInfo.userAssignedRole === role || orgMemberInfo.userAssignedAdditionalRoles.includes(role)\n        } else {\n            return orgMemberInfo.userInheritedRolesPlusCurrentRole.includes(role)\n        }\n    }\n\n    function hasPermission(orgId: string, permission: string): boolean {\n        const orgMemberInfo = orgIdToOrgMemberInfo[orgId]\n        if (orgMemberInfo === undefined) {\n            return false;\n        }\n        return orgMemberInfo.userPermissions.includes(permission)\n    }\n\n    function hasAllPermissions(orgId: string, permissions: string[]): boolean {\n        const orgMemberInfo = orgIdToOrgMemberInfo[orgId]\n        if (orgMemberInfo === undefined) {\n            return false;\n        }\n        return permissions.every(permission => orgMemberInfo.userPermissions.includes(permission))\n    }\n\n    function getAccessHelperWithOrgId(orgId: string): AccessHelperWithOrg {\n        return {\n            isRole(role: string): boolean {\n                return isRole(orgId, role)\n            },\n            isAtLeastRole(role: string): boolean {\n                return isAtLeastRole(orgId, role)\n            },\n            hasPermission(permission: string): boolean {\n                return hasPermission(orgId, permission)\n            },\n            hasAllPermissions(permissions: string[]): boolean {\n                return hasAllPermissions(orgId, permissions)\n            },\n        }\n    }\n    \n    return {\n        isRole,\n        isAtLeastRole,\n        hasPermission,\n        hasAllPermissions,\n        getAccessHelperWithOrgId,\n    }\n}\n","export const DEFAULT_RETRIES = 3\n\nexport const runWithRetriesOnAnyError = async <T>(fn: () => Promise<T>): Promise<T> => {\n    return runWithRetriesInner(fn, DEFAULT_RETRIES)\n}\n\nconst runWithRetriesInner = async <T>(fn: () => Promise<T>, numRetriesLeft: number): Promise<T> => {\n    try {\n        return await fn()\n    } catch (e) {\n        if (numRetriesLeft <= 0) {\n            throw e\n        }\n        await delay(numRetriesLeftToDelay(numRetriesLeft))\n        return runWithRetriesInner(fn, numRetriesLeft - 1)\n    }\n}\n\nconst delay = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n\nconst numRetriesLeftToDelay = (numRetriesLeft: number) => {\n    // We could be fancy, but we only retry 3 times so...\n    if (numRetriesLeft >= 3) {\n        return 100\n    } else if (numRetriesLeft === 2) {\n        return 200\n    } else {\n        return 300\n    }\n}","export function currentTimeSeconds() {\n    return Date.now() / 1000\n}\n\nexport function hasLocalStorage(): boolean {\n    return typeof localStorage !== \"undefined\"\n}\n\nexport function hasWindow(): boolean {\n    return typeof window !== \"undefined\"\n}\n\nexport function getLocalStorageNumber(key: string): number | null {\n    if (!hasLocalStorage()) {\n        return null\n    }\n\n    const value = localStorage.getItem(key)\n    if (!value) {\n        return null\n    }\n    const num = parseInt(value, 10)\n    if (Number.isNaN(num)) {\n        return null\n    }\n    return num\n}\n","import { AuthenticationInfo, fetchAuthenticationInfo, logout } from \"./api\"\nimport { runWithRetriesOnAnyError } from \"./fetch_retries\"\nimport { currentTimeSeconds, getLocalStorageNumber, hasLocalStorage, hasWindow } from \"./helpers\"\n\nconst LOGGED_IN_AT_KEY = \"__PROPEL_AUTH_LOGGED_IN_AT\"\nconst LOGGED_OUT_AT_KEY = \"__PROPEL_AUTH_LOGGED_OUT_AT\"\nconst AUTH_TOKEN_REFRESH_BEFORE_EXPIRATION_SECONDS = 10 * 60\nconst DEBOUNCE_DURATION_FOR_REFOCUS_SECONDS = 60\nconst ACTIVE_ORG_ACCESS_TOKEN_REFRESH_EXPIRATION_SECONDS = 60 * 5\n\nconst encodeBase64 = (str: string) => {\n    const encode = window ? window.btoa : btoa\n    return encode(str)\n}\n\nexport interface RedirectToSignupOptions {\n    postSignupRedirectUrl?: string\n    userSignupQueryParameters?: Record<string, string>\n}\n\nexport interface RedirectToLoginOptions {\n    postLoginRedirectUrl?: string\n    userSignupQueryParameters?: Record<string, string>\n}\n\nexport interface RedirectToAccountOptions {\n    redirectBackToUrl?: string\n}\n\nexport interface RedirectToCreateOrgOptions {\n    redirectBackToUrl?: string\n}\n\nexport interface RedirectToOrgPageOptions {\n    redirectBackToUrl?: string\n}\n\nexport interface RedirectToSetupSAMLPageOptions {\n    redirectBackToUrl?: string\n}\n\nexport type AccessTokenForActiveOrg =\n    | {\n          error: undefined\n          accessToken: string\n      }\n    | {\n          error: \"user_not_in_org\"\n          accessToken: never\n      }\n    | {\n          error: \"unexpected_error\"\n          accessToken: never\n      }\n\nexport interface IAuthClient {\n    /**\n     * If the user is logged in, this method returns an access token, the time (in seconds) that the token will expire,\n     * the user's organizations (including org names and user's role within the org), and the user's metadata.\n     * Otherwise, this method returns null.\n     *\n     * The promise will generally resolve immediately, unless our current information is stale in which case it will\n     * make an API request.\n     *\n     * @param forceRefresh If true, this method will always make an API request. Default false\n     */\n    getAuthenticationInfoOrNull(forceRefresh?: boolean): Promise<AuthenticationInfo | null>\n\n    /**\n     * Logs the current user out.\n     * @param redirectAfterLogout If true, will redirect the user to the configured logout URL.\n     */\n    logout(redirectAfterLogout: boolean): Promise<void>\n\n    /**\n     * Gets the URL for the hosted signup page.\n     */\n    getSignupPageUrl(options?: RedirectToSignupOptions): string\n\n    /**\n     * Gets the URL for the hosted login page.\n     */\n    getLoginPageUrl(options?: RedirectToLoginOptions): string\n\n    /**\n     * Gets the URL for the hosted account page.\n     */\n    getAccountPageUrl(options?: RedirectToAccountOptions): string\n\n    /**\n     * Gets the URL for the hosted organization page.\n     * @param orgId The ID of the organization's page to load. If not specified, a random one will be used instead.\n     */\n    getOrgPageUrl(orgId?: string, options?: RedirectToOrgPageOptions): string\n\n    /**\n     * Gets the URL for the hosted create organization page.\n     */\n    getCreateOrgPageUrl(options?: RedirectToCreateOrgOptions): string\n\n    /**\n     * Gets the URL for the hosted SAML configuration page.\n     */\n    getSetupSAMLPageUrl(orgId: string): string\n\n    /**\n     * Gets an access token for a specific organization, known as an Active Org.\n     */\n    getAccessTokenForOrg(orgId: string): Promise<AccessTokenForActiveOrg>\n\n    /**\n     * Redirects the user to the signup page.\n     */\n    redirectToSignupPage(options?: RedirectToSignupOptions): void\n\n    /**\n     * Redirects the user to the login page.\n     */\n    redirectToLoginPage(options?: RedirectToLoginOptions): void\n\n    /**\n     * Redirects the user to the account page.\n     */\n    redirectToAccountPage(options?: RedirectToAccountOptions): void\n\n    /**\n     * Redirects the user to the organization page.\n     * @param orgId The ID of the organization\"s page to load. If not specified, a random one will be used instead.\n     */\n    redirectToOrgPage(orgId?: string, options?: RedirectToOrgPageOptions): void\n\n    /**\n     * Redirects the user to the create organization page.\n     */\n    redirectToCreateOrgPage(options?: RedirectToCreateOrgOptions): void\n\n    /**\n     * Redirects the user to the SAML configuration page.\n     */\n    redirectToSetupSAMLPage(orgId: string, options?: RedirectToSetupSAMLPageOptions): void\n\n    /**\n     * Adds an observer which is called whenever the users logs in or logs out.\n     */\n    addLoggedInChangeObserver(observer: (isLoggedIn: boolean) => void): void\n\n    /**\n     * Removes the observer\n     */\n    removeLoggedInChangeObserver(observer: (isLoggedIn: boolean) => void): void\n\n    /**\n     * Adds an observer which is called whenever the access token changes.\n     */\n    addAccessTokenChangeObserver(observer: (accessToken: string | undefined) => void): void\n\n    /**\n     * Removes the observer\n     */\n    removeAccessTokenChangeObserver(observer: (accessToken: string | undefined) => void): void\n\n    /**\n     * Cleanup the auth client if you no longer need it.\n     */\n    destroy(): void\n}\n\nexport interface IAuthOptions {\n    /**\n     * Base URL where your authentication pages are hosted. See **Frontend Integration** section of your PropelAuth project.\n     */\n    authUrl: string\n\n    /**\n     * If true, periodically refresh the token in the background.\n     * This helps ensure you always have a valid token ready to go when you need it.\n     *\n     * Default true\n     */\n    enableBackgroundTokenRefresh?: boolean\n}\n\ninterface AccessTokenActiveOrgMap {\n    [orgId: string]: {\n        accessToken: string\n        fetchedAt: number\n    }\n}\n\ninterface ClientState {\n    initialLoadFinished: boolean\n    authenticationInfo: AuthenticationInfo | null\n    observers: ((isLoggedIn: boolean) => void)[]\n    accessTokenObservers: ((accessToken: string | undefined) => void)[]\n    lastLoggedInAtMessage: number | null\n    lastLoggedOutAtMessage: number | null\n    refreshInterval: number | null\n    lastRefresh: number | null\n    accessTokenActiveOrgMap: AccessTokenActiveOrgMap\n    readonly authUrl: string\n}\n\nfunction validateAndCleanupOptions(authOptions: IAuthOptions) {\n    try {\n        // This helps make sure we have a consistent URL ignoring things like trailing slashes\n        const authUrl = new URL(authOptions.authUrl)\n        authOptions.authUrl = authUrl.origin\n    } catch (e) {\n        console.error(\"Invalid authUrl\", e)\n        throw new Error(\"Unable to initialize auth client\")\n    }\n\n    if (authOptions.enableBackgroundTokenRefresh === undefined) {\n        authOptions.enableBackgroundTokenRefresh = true\n    }\n}\n\nexport function createClient(authOptions: IAuthOptions): IAuthClient {\n    validateAndCleanupOptions(authOptions)\n\n    // Internal state\n    const clientState: ClientState = {\n        initialLoadFinished: false,\n        authenticationInfo: null,\n        observers: [],\n        accessTokenObservers: [],\n        lastLoggedInAtMessage: getLocalStorageNumber(LOGGED_IN_AT_KEY),\n        lastLoggedOutAtMessage: getLocalStorageNumber(LOGGED_OUT_AT_KEY),\n        authUrl: authOptions.authUrl,\n        refreshInterval: null,\n        lastRefresh: null,\n        accessTokenActiveOrgMap: {},\n    }\n\n    // Helper functions\n    function notifyObservers(isLoggedIn: boolean) {\n        for (let i = 0; i < clientState.observers.length; i++) {\n            const observer = clientState.observers[i]\n            if (observer) {\n                observer(isLoggedIn)\n            }\n        }\n    }\n\n    function notifyObserversOfAccessTokenChange(accessToken: string | undefined) {\n        for (let i = 0; i < clientState.accessTokenObservers.length; i++) {\n            const observer = clientState.accessTokenObservers[i]\n            if (observer) {\n                observer(accessToken)\n            }\n        }\n    }\n\n    function userJustLoggedOut(accessToken: string | undefined, previousAccessToken: string | undefined) {\n        // Edge case: the first time we go to the page, if we can't load the\n        //   auth token we should treat it as a logout event\n        return !accessToken && (previousAccessToken || !clientState.initialLoadFinished)\n    }\n\n    function userJustLoggedIn(accessToken: string | undefined, previousAccessToken: string | undefined) {\n        return !previousAccessToken && accessToken\n    }\n\n    function updateLastLoggedOutAt() {\n        const loggedOutAt = currentTimeSeconds()\n        clientState.lastLoggedOutAtMessage = loggedOutAt\n        if (hasLocalStorage()) {\n            localStorage.setItem(LOGGED_OUT_AT_KEY, String(loggedOutAt))\n        }\n    }\n\n    function updateLastLoggedInAt() {\n        const loggedInAt = currentTimeSeconds()\n        clientState.lastLoggedInAtMessage = loggedInAt\n        if (hasLocalStorage()) {\n            localStorage.setItem(LOGGED_IN_AT_KEY, String(loggedInAt))\n        }\n    }\n\n    /**\n     * Invalidates all org's access tokens.\n     */\n    function resetAccessTokenActiveOrgMap() {\n        clientState.accessTokenActiveOrgMap = {}\n    }\n\n    function setAuthenticationInfoAndUpdateDownstream(authenticationInfo: AuthenticationInfo | null) {\n        const previousAccessToken = clientState.authenticationInfo?.accessToken\n        clientState.authenticationInfo = authenticationInfo\n        const accessToken = authenticationInfo?.accessToken\n\n        if (userJustLoggedOut(accessToken, previousAccessToken)) {\n            notifyObservers(false)\n            updateLastLoggedOutAt()\n        } else if (userJustLoggedIn(accessToken, previousAccessToken)) {\n            notifyObservers(true)\n            updateLastLoggedInAt()\n        }\n\n        if (previousAccessToken !== accessToken) {\n            notifyObserversOfAccessTokenChange(accessToken)\n        }\n\n        resetAccessTokenActiveOrgMap()\n\n        clientState.lastRefresh = currentTimeSeconds()\n        clientState.initialLoadFinished = true\n    }\n\n    async function forceRefreshToken(returnCached: boolean): Promise<AuthenticationInfo | null> {\n        try {\n            // Happy case, we fetch auth info and save it\n            const authenticationInfo = await runWithRetriesOnAnyError(() =>\n                fetchAuthenticationInfo(clientState.authUrl)\n            )\n            setAuthenticationInfoAndUpdateDownstream(authenticationInfo)\n            return authenticationInfo\n        } catch (e) {\n            // If there was an error, we sometimes still want to return the value we have cached\n            //   (e.g. if we were prefetching), so in those cases we swallow the exception\n            if (returnCached) {\n                return clientState.authenticationInfo\n            } else {\n                setAuthenticationInfoAndUpdateDownstream(null)\n                throw e\n            }\n        }\n    }\n\n    const getSignupPageUrl = (options?: RedirectToSignupOptions) => {\n        let qs = new URLSearchParams()\n        let url = `${clientState.authUrl}/signup`\n        if (options) {\n            const { postSignupRedirectUrl, userSignupQueryParameters } = options\n            if (postSignupRedirectUrl) {\n                qs.set(\"rt\", encodeBase64(postSignupRedirectUrl))\n            }\n            if (userSignupQueryParameters) {\n                Object.entries(userSignupQueryParameters).forEach(([key, value]) => {\n                    qs.set(key, value)\n                })\n            }\n        }\n        if (qs.toString()) {\n            url += `?${qs.toString()}`\n        }\n        return url\n    }\n\n    const getLoginPageUrl = (options?: RedirectToLoginOptions) => {\n        let qs = new URLSearchParams()\n        let url = `${clientState.authUrl}/login`\n        if (options) {\n            const { postLoginRedirectUrl, userSignupQueryParameters } = options\n            if (postLoginRedirectUrl) {\n                qs.set(\"rt\", encodeBase64(postLoginRedirectUrl))\n            }\n            if (userSignupQueryParameters) {\n                Object.entries(userSignupQueryParameters).forEach(([key, value]) => {\n                    qs.set(key, value)\n                })\n            }\n        }\n        if (qs.toString()) {\n            url += `?${qs.toString()}`\n        }\n        return url\n    }\n\n    const getAccountPageUrl = (options?: RedirectToAccountOptions) => {\n        let qs = new URLSearchParams()\n        let url = `${clientState.authUrl}/account`\n        if (options) {\n            const { redirectBackToUrl } = options\n            if (redirectBackToUrl) {\n                qs.set(\"rt\", encodeBase64(redirectBackToUrl))\n            }\n        }\n\n        if (qs.toString()) {\n            url += `?${qs.toString()}`\n        }\n        return url\n    }\n\n    const getOrgPageUrl = (orgId?: string, options?: RedirectToOrgPageOptions) => {\n        let qs = new URLSearchParams()\n        let url = `${clientState.authUrl}/org`\n        if (orgId) {\n            qs.set(\"id\", orgId)\n        }\n\n        if (options) {\n            if (options.redirectBackToUrl) {\n                qs.set(\"rt\", encodeBase64(options.redirectBackToUrl))\n            }\n        }\n\n        if (qs.toString()) {\n            url += `?${qs.toString()}`\n        }\n        return url\n    }\n\n    const getCreateOrgPageUrl = (options?: RedirectToCreateOrgOptions) => {\n        let qs = new URLSearchParams()\n        let url = `${clientState.authUrl}/create_org`\n        if (options) {\n            const { redirectBackToUrl } = options\n            if (redirectBackToUrl) {\n                qs.set(\"rt\", encodeBase64(redirectBackToUrl))\n            }\n        }\n        if (qs.toString()) {\n            url += `?${qs.toString()}`\n        }\n        return url\n    }\n\n    const getSetupSAMLPageUrl = (orgId: string, options?: RedirectToSetupSAMLPageOptions) => {\n        let qs = new URLSearchParams()\n        if (options) {\n            if (options.redirectBackToUrl) {\n                qs.set(\"rt\", encodeBase64(options.redirectBackToUrl))\n            }\n        }\n        qs.set(\"id\", orgId)\n\n        return `${clientState.authUrl}/saml?${qs.toString()}`\n    }\n\n    const client = {\n        addLoggedInChangeObserver(loggedInChangeObserver: (isLoggedIn: boolean) => void): void {\n            const hasObserver = clientState.observers.includes(loggedInChangeObserver)\n            if (hasObserver) {\n                console.error(\"Observer has been attached already.\")\n            } else if (!loggedInChangeObserver) {\n                console.error(\"Cannot add a null observer\")\n            } else {\n                clientState.observers.push(loggedInChangeObserver)\n            }\n        },\n\n        removeLoggedInChangeObserver(loggedInChangeObserver: (isLoggedIn: boolean) => void): void {\n            const observerIndex = clientState.observers.indexOf(loggedInChangeObserver)\n            if (observerIndex === -1) {\n                console.error(\"Cannot find observer to remove\")\n            } else {\n                clientState.observers.splice(observerIndex, 1)\n            }\n        },\n\n        addAccessTokenChangeObserver(observer: (accessToken: string | undefined) => void) {\n            const hasObserver = clientState.accessTokenObservers.includes(observer)\n            if (hasObserver) {\n                console.error(\"Observer has been attached already.\")\n            } else if (!observer) {\n                console.error(\"Cannot add a null observer\")\n            } else {\n                clientState.accessTokenObservers.push(observer)\n            }\n        },\n\n        removeAccessTokenChangeObserver(observer: (accessToken: string | undefined) => void) {\n            const observerIndex = clientState.accessTokenObservers.indexOf(observer)\n            if (observerIndex === -1) {\n                console.error(\"Cannot find observer to remove\")\n            } else {\n                clientState.accessTokenObservers.splice(observerIndex, 1)\n            }\n        },\n\n        async getAuthenticationInfoOrNull(forceRefresh?: boolean): Promise<AuthenticationInfo | null> {\n            const currentTimeSecs = currentTimeSeconds()\n            if (forceRefresh) {\n                return await forceRefreshToken(false)\n            } else if (!clientState.authenticationInfo) {\n                return await forceRefreshToken(false)\n            } else if (\n                currentTimeSecs + AUTH_TOKEN_REFRESH_BEFORE_EXPIRATION_SECONDS >\n                clientState.authenticationInfo.expiresAtSeconds\n            ) {\n                // Small edge case: If we were being proactive\n                //   and the auth information hasn't expired yet, swallow any exceptions\n                const returnCached = currentTimeSecs < clientState.authenticationInfo.expiresAtSeconds\n                return await forceRefreshToken(returnCached)\n            } else {\n                return clientState.authenticationInfo\n            }\n        },\n\n        async getAccessTokenForOrg(orgId: string): Promise<AccessTokenForActiveOrg> {\n            // First, check if there is a valid access token for the org ID in the\n            // valid time frame.\n            const currentTimeSecs = currentTimeSeconds()\n\n            const activeOrgAccessToken = clientState.accessTokenActiveOrgMap[orgId]\n            if (!!activeOrgAccessToken) {\n                if (\n                    currentTimeSecs <\n                    activeOrgAccessToken.fetchedAt + ACTIVE_ORG_ACCESS_TOKEN_REFRESH_EXPIRATION_SECONDS\n                ) {\n                    return {\n                        accessToken: activeOrgAccessToken.accessToken,\n                        error: undefined,\n                    }\n                }\n            }\n            // Fetch the access token for the org ID and update.\n            try {\n                const authenticationInfo = await runWithRetriesOnAnyError(() =>\n                    fetchAuthenticationInfo(clientState.authUrl, orgId)\n                )\n                if (!authenticationInfo) {\n                    // Only null if 401 unauthorized.\n                    return {\n                        error: \"user_not_in_org\",\n                        accessToken: null as never,\n                    }\n                }\n                const { accessToken } = authenticationInfo\n                clientState.accessTokenActiveOrgMap[orgId] = {\n                    accessToken,\n                    fetchedAt: currentTimeSecs,\n                }\n                return {\n                    accessToken,\n                    error: undefined,\n                }\n            } catch (e) {\n                return {\n                    error: \"unexpected_error\",\n                    accessToken: null as never,\n                }\n            }\n        },\n\n        getSignupPageUrl(options?: RedirectToSignupOptions): string {\n            return getSignupPageUrl(options)\n        },\n\n        getLoginPageUrl(options?: RedirectToLoginOptions): string {\n            return getLoginPageUrl(options)\n        },\n\n        getAccountPageUrl(options?: RedirectToAccountOptions): string {\n            return getAccountPageUrl(options)\n        },\n\n        getOrgPageUrl(orgId?: string, options?: RedirectToOrgPageOptions): string {\n            return getOrgPageUrl(orgId, options)\n        },\n\n        getCreateOrgPageUrl(options?: RedirectToCreateOrgOptions): string {\n            return getCreateOrgPageUrl(options)\n        },\n\n        getSetupSAMLPageUrl(orgId: string, options?: RedirectToSetupSAMLPageOptions): string {\n            return getSetupSAMLPageUrl(orgId, options)\n        },\n\n        redirectToSignupPage(options?: RedirectToSignupOptions): void {\n            window.location.href = getSignupPageUrl(options)\n        },\n\n        redirectToLoginPage(options?: RedirectToLoginOptions): void {\n            window.location.href = getLoginPageUrl(options)\n        },\n\n        redirectToAccountPage(options?: RedirectToAccountOptions): void {\n            window.location.href = getAccountPageUrl(options)\n        },\n\n        redirectToOrgPage(orgId?: string, options?: RedirectToOrgPageOptions): void {\n            window.location.href = getOrgPageUrl(orgId, options)\n        },\n\n        redirectToCreateOrgPage(options?: RedirectToCreateOrgOptions): void {\n            window.location.href = getCreateOrgPageUrl(options)\n        },\n\n        redirectToSetupSAMLPage(orgId: string, options?: RedirectToSetupSAMLPageOptions) {\n            window.location.href = getSetupSAMLPageUrl(orgId, options)\n        },\n\n        async logout(redirectAfterLogout: boolean): Promise<void> {\n            const logoutResponse = await logout(clientState.authUrl)\n            setAuthenticationInfoAndUpdateDownstream(null)\n            if (redirectAfterLogout) {\n                window.location.href = logoutResponse.redirect_to\n            }\n        },\n\n        destroy() {\n            clientState.observers = []\n            clientState.accessTokenObservers = []\n            window.removeEventListener(\"storage\", onStorageChange)\n            if (clientState.refreshInterval) {\n                clearInterval(clientState.refreshInterval)\n            }\n        },\n    }\n\n    const onStorageChange = async function () {\n        // If localStorage isn't available, nothing to do here.\n        // This usually happens in frameworks that have some SSR components\n        if (!hasLocalStorage()) {\n            return\n        }\n\n        const loggedOutAt = getLocalStorageNumber(LOGGED_OUT_AT_KEY)\n        const loggedInAt = getLocalStorageNumber(LOGGED_IN_AT_KEY)\n\n        // If we've detected a logout event after the last one our client is aware of, trigger a refresh\n        if (loggedOutAt && (!clientState.lastLoggedOutAtMessage || loggedOutAt > clientState.lastLoggedOutAtMessage)) {\n            clientState.lastLoggedOutAtMessage = loggedOutAt\n            if (clientState.authenticationInfo) {\n                await forceRefreshToken(true)\n            }\n        }\n\n        // If we've detected a login event after the last one our client is aware of, trigger a refresh\n        if (loggedInAt && (!clientState.lastLoggedInAtMessage || loggedInAt > clientState.lastLoggedInAtMessage)) {\n            clientState.lastLoggedInAtMessage = loggedInAt\n            if (!clientState.authenticationInfo) {\n                await forceRefreshToken(true)\n            }\n        }\n    }\n\n    // If we were offline or on a different tab, when we return, refetch auth info\n    // Some browsers trigger focus more often than we'd like, so we'll debounce a little here as well\n    const onOnlineOrFocus = async function () {\n        if (\n            clientState.lastRefresh &&\n            currentTimeSeconds() > clientState.lastRefresh + DEBOUNCE_DURATION_FOR_REFOCUS_SECONDS\n        ) {\n            await forceRefreshToken(true)\n        } else {\n            await client.getAuthenticationInfoOrNull()\n        }\n    }\n\n    if (hasWindow()) {\n        window.addEventListener(\"storage\", onStorageChange)\n        window.addEventListener(\"online\", onOnlineOrFocus)\n        window.addEventListener(\"focus\", onOnlineOrFocus)\n\n        if (authOptions.enableBackgroundTokenRefresh) {\n            client.getAuthenticationInfoOrNull()\n            clientState.refreshInterval = window.setInterval(client.getAuthenticationInfoOrNull, 60000)\n        }\n    }\n\n    return client\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(812);\n"],"names":["authClient","createClient","authUrl","enableBackgroundTokenRefresh","userid","displayprofile","fetch","then","response","json","data","console","log","document","getElementById","innerText","deletemedication","medid","this","id","displaymedications","arr","list","ul","map","item","medication_name","dosage","frequency","duration","intended_use","medication_id","join","innerHTML","elems","getElementsByClassName","i","length","addEventListener","addmedication","medname","value","use","updateprofile","name","dob","height","weight","sex","address","provider","policy","ssn","authInfo","getAuthenticationInfoOrNull","user","userId","style","display","onclick","_authInfo$user","redirectToSignupPage","redirectToLoginPage","redirectToAccountPage","logout","r","e","arguments","t","s","o","n","expires","Date","now","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","a","split","cookie","write","Object","create","set","get","slice","read","remove","withAttributes","converter","attributes","withConverter","freeze","path","SingleRole","MultiRole","constructor","orgIdToUserOrgInfo","email","firstName","lastName","username","createdAt","pictureUrl","hasPassword","hasMfaEnabled","canCreateOrgs","legacyUserId","impersonatorUserId","properties","getOrg","getOrgByName","toLowerCase","urlSafeOrgName","getUserProperty","getOrgs","values","isImpersonating","isRole","isAtLeastRole","hasPermission","hasAllPermissions","fromJSON","JSON","parse","stringify","error","c","l","orgId","orgName","orgMetadata","orgRoleStructure","userAssignedRole","userInheritedRolesPlusCurrentRole","userPermissions","userAssignedAdditionalRoles","includes","every","URLSearchParams","append","toString","method","credentials","headers","status","Promise","reject","message","ok","text","orgIdToOrgMemberInfo","orgHelper","hasOwnProperty","getOrgIds","keys","accessHelper","getAccessHelperWithOrgId","userClass","mfaEnabled","resolve","accessToken","expiresAtSeconds","emailConfirmed","lastActiveAt","statusText","async","u","d","g","setTimeout","h","f","localStorage","m","getItem","parseInt","Number","isNaN","p","I","O","window","btoa","ACTIVE_ORG_ID_COOKIE_NAME","OrgMemberInfoClass","UserClass","URL","origin","Error","initialLoadFinished","authenticationInfo","observers","accessTokenObservers","lastLoggedInAtMessage","lastLoggedOutAtMessage","refreshInterval","lastRefresh","accessTokenActiveOrgMap","setItem","String","postSignupRedirectUrl","userSignupQueryParameters","entries","forEach","_ref","postLoginRedirectUrl","_ref2","redirectBackToUrl","v","U","addLoggedInChangeObserver","push","removeLoggedInChangeObserver","indexOf","splice","addAccessTokenChangeObserver","removeAccessTokenChangeObserver","getAccessTokenForOrg","fetchedAt","getSignupPageUrl","getLoginPageUrl","getAccountPageUrl","getOrgPageUrl","getCreateOrgPageUrl","getSetupSAMLPageUrl","location","href","redirectToOrgPage","redirectToCreateOrgPage","redirectToSetupSAMLPage","redirect_to","destroy","removeEventListener","A","clearInterval","R","setInterval","getActiveOrgId","setActiveOrgId","sameSite","secure","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","webpackQueues","Symbol","webpackExports","webpackError","resolveQueue","queue","fn","body","hasAwait","currentDeps","outerResolve","depQueues","Set","promise","rej","x","deps","dep","obj","ret","wrapDeps","getResult","fnQueue","q","has","add","err","getter","__esModule","definition","key","defineProperty","enumerable","prop","prototype"],"sourceRoot":""}